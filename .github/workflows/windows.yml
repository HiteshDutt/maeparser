name: CMake

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: false
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: false
  push:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest
    environment: buildStage

    steps:
    - uses: actions/checkout@v3
    - name: Install BOOST x64
      shell: pwsh
      run: |
        Write-Host "Installing boost" -ForegroundColor Cyan
        Measure-Command {
            Write-Host "Installing boost" -ForegroundColor Cyan

            Write-Host "Downloading x64..."
            $exePath = "${{github.workspace}}\boost.zip"
            (New-Object Net.WebClient).DownloadFile(${{vars.BOOST_DOWNLOAD_LINK}}, $exePath)

            Write-Host "EXPAND ARCHIVE"
            Expand-Archive -Path ${{github.workspace}}\boost.zip -DestinationPath ${{github.workspace}}\boost
        }
        Write-Host "Updating Path Variables"
        set PATH=%PATH%;"${{github.workspace}}\boost"
        setx /M PATH "%PATH%"
        Write-Host "Boost libraries installed!" -ForegroundColor Green
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{vars.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{vars.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{vars.BUILD_TYPE}}

